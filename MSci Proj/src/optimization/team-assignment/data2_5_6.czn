predicate bin_packing_loadChoco(array [int] of var int: load,array [int] of var int: bin,array [int] of int: w);
predicate alldifferentChoco(array [int] of var int: x);
predicate bin_packingChoco(int: c,array [int] of var int: bin,array [int] of int: w);
array [1..30] of int: X_INTRODUCED_31 = [2363,2353,2353,2299,2292,2283,2055,2046,2041,2040,2037,2028,1910,1908,1907,1902,1902,1896,1824,1812,1812,1812,1810,1802,1715,1714,1708,1704,1703,1696];
array [1..30] of int: X_INTRODUCED_69 = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];
array [1..4] of int: X_INTRODUCED_72 = [1,-1000,1,-1];
var 1..6: X_INTRODUCED_6;
var 1..6: X_INTRODUCED_7;
var 1..6: X_INTRODUCED_8;
var 1..6: X_INTRODUCED_9;
var 1..6: X_INTRODUCED_10;
var 1..6: X_INTRODUCED_11;
var 1..6: X_INTRODUCED_12;
var 1..6: X_INTRODUCED_13;
var 1..6: X_INTRODUCED_14;
var 1..6: X_INTRODUCED_15;
var 1..6: X_INTRODUCED_16;
var 1..6: X_INTRODUCED_17;
var 1..6: X_INTRODUCED_18;
var 1..6: X_INTRODUCED_19;
var 1..6: X_INTRODUCED_20;
var 1..6: X_INTRODUCED_21;
var 1..6: X_INTRODUCED_22;
var 1..6: X_INTRODUCED_23;
var 1..6: X_INTRODUCED_24;
var 1..6: X_INTRODUCED_25;
var 1..6: X_INTRODUCED_26;
var 1..6: X_INTRODUCED_27;
var 1..6: X_INTRODUCED_28;
var 1..6: X_INTRODUCED_29;
var 0..58727: X_INTRODUCED_32 ::var_is_introduced ;
var 0..58727: X_INTRODUCED_33 ::var_is_introduced ;
var 0..58727: X_INTRODUCED_34 ::var_is_introduced ;
var 0..58727: X_INTRODUCED_35 ::var_is_introduced ;
var 0..58727: X_INTRODUCED_36 ::var_is_introduced ;
var 0..58727: X_INTRODUCED_37 ::var_is_introduced ;
var 0..11815: balance:: is_defined_var;
var 0..58727: X_INTRODUCED_46 ::var_is_introduced ;
var 0..58727: X_INTRODUCED_47 ::var_is_introduced ;
var 0..58727: X_INTRODUCED_48 ::var_is_introduced ;
var 0..58727: X_INTRODUCED_49 ::var_is_introduced ;
var 0..58727: X_INTRODUCED_50 ::var_is_introduced ;
var 0..58727: X_INTRODUCED_59 ::var_is_introduced ;
var 0..58727: X_INTRODUCED_60 ::var_is_introduced ;
var 0..58727: X_INTRODUCED_61 ::var_is_introduced ;
var 0..58727: X_INTRODUCED_62 ::var_is_introduced ;
var 0..58727: X_INTRODUCED_63 ::var_is_introduced ;
var bool: X_INTRODUCED_65 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_66 ::var_is_introduced :: is_defined_var;
var -11815..1000: objective:: output_var:: is_defined_var;
array [1..30] of var int: Team:: output_array([1..30]) = [1,2,3,4,5,6,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..6] of var int: TeamRating = [X_INTRODUCED_32,X_INTRODUCED_33,X_INTRODUCED_34,X_INTRODUCED_35,X_INTRODUCED_36,X_INTRODUCED_37];
array [1..6] of var int: X_INTRODUCED_30 ::var_is_introduced  = [X_INTRODUCED_32,X_INTRODUCED_33,X_INTRODUCED_34,X_INTRODUCED_35,X_INTRODUCED_36,X_INTRODUCED_37];
array [1..6] of var int: X_INTRODUCED_68 ::var_is_introduced  = [1,2,3,4,5,6];
constraint bin_packing_loadChoco(X_INTRODUCED_30,Team,X_INTRODUCED_31);
constraint int_min(X_INTRODUCED_33,X_INTRODUCED_32,X_INTRODUCED_46);
constraint int_min(X_INTRODUCED_34,X_INTRODUCED_46,X_INTRODUCED_47);
constraint int_min(X_INTRODUCED_35,X_INTRODUCED_47,X_INTRODUCED_48);
constraint int_min(X_INTRODUCED_36,X_INTRODUCED_48,X_INTRODUCED_49);
constraint int_min(X_INTRODUCED_37,X_INTRODUCED_49,X_INTRODUCED_50);
constraint int_max(X_INTRODUCED_33,X_INTRODUCED_32,X_INTRODUCED_59);
constraint int_max(X_INTRODUCED_34,X_INTRODUCED_59,X_INTRODUCED_60);
constraint int_max(X_INTRODUCED_35,X_INTRODUCED_60,X_INTRODUCED_61);
constraint int_max(X_INTRODUCED_36,X_INTRODUCED_61,X_INTRODUCED_62);
constraint int_max(X_INTRODUCED_37,X_INTRODUCED_62,X_INTRODUCED_63);
constraint alldifferentChoco(X_INTRODUCED_68);
constraint alldifferentChoco([X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11]);
constraint alldifferentChoco([X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17]);
constraint alldifferentChoco([X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23]);
constraint alldifferentChoco([X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29]);
constraint bin_packingChoco(5,Team,X_INTRODUCED_69);
constraint int_lin_eq(X_INTRODUCED_72,[objective,X_INTRODUCED_66,X_INTRODUCED_63,X_INTRODUCED_50],0):: defines_var(objective);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_63,X_INTRODUCED_50,balance],0):: defines_var(balance);
constraint int_eq_reif(X_INTRODUCED_22,2,X_INTRODUCED_65):: defines_var(X_INTRODUCED_65);
constraint bool2int(X_INTRODUCED_65,X_INTRODUCED_66):: defines_var(X_INTRODUCED_66);
solve :: int_search(Team,input_order,indomain_min,complete) maximize objective;
