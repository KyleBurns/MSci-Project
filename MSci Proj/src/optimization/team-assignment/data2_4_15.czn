predicate bin_packing_loadChoco(array [int] of var int: load,array [int] of var int: bin,array [int] of int: w);
predicate alldifferentChoco(array [int] of var int: x);
predicate bin_packingChoco(int: c,array [int] of var int: bin,array [int] of int: w);
array [1..60] of int: X_INTRODUCED_61 = [2363,2353,2353,2299,2292,2283,2250,2243,2231,2225,2211,2195,2185,2168,2161,2055,2046,2041,2040,2037,2028,2018,2016,2011,2008,2003,2000,2000,1996,1996,1910,1908,1907,1902,1902,1896,1891,1890,1888,1888,1883,1878,1873,1873,1871,1824,1812,1812,1812,1810,1802,1799,1799,1798,1790,1787,1786,1786,1784,1771];
array [1..60] of int: X_INTRODUCED_189 = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];
var 1..15: X_INTRODUCED_15;
var 1..15: X_INTRODUCED_16;
var 1..15: X_INTRODUCED_17;
var 1..15: X_INTRODUCED_18;
var 1..15: X_INTRODUCED_19;
var 1..15: X_INTRODUCED_20;
var 1..15: X_INTRODUCED_21;
var 1..15: X_INTRODUCED_22;
var 1..15: X_INTRODUCED_23;
var 1..15: X_INTRODUCED_24;
var 1..15: X_INTRODUCED_25;
var 1..15: X_INTRODUCED_26;
var 1..15: X_INTRODUCED_27;
var 1..15: X_INTRODUCED_28;
var 1..15: X_INTRODUCED_29;
var 1..15: X_INTRODUCED_30;
var 1..15: X_INTRODUCED_31;
var 1..15: X_INTRODUCED_32;
var 1..15: X_INTRODUCED_33;
var 1..15: X_INTRODUCED_34;
var 1..15: X_INTRODUCED_35;
var 1..15: X_INTRODUCED_36;
var 1..15: X_INTRODUCED_37;
var 1..15: X_INTRODUCED_38;
var 1..15: X_INTRODUCED_39;
var 1..15: X_INTRODUCED_40;
var 1..15: X_INTRODUCED_41;
var 1..15: X_INTRODUCED_42;
var 1..15: X_INTRODUCED_43;
var 1..15: X_INTRODUCED_44;
var 1..15: X_INTRODUCED_45;
var 1..15: X_INTRODUCED_46;
var 1..15: X_INTRODUCED_47;
var 1..15: X_INTRODUCED_48;
var 1..15: X_INTRODUCED_49;
var 1..15: X_INTRODUCED_50;
var 1..15: X_INTRODUCED_51;
var 1..15: X_INTRODUCED_52;
var 1..15: X_INTRODUCED_53;
var 1..15: X_INTRODUCED_54;
var 1..15: X_INTRODUCED_55;
var 1..15: X_INTRODUCED_56;
var 1..15: X_INTRODUCED_57;
var 1..15: X_INTRODUCED_58;
var 1..15: X_INTRODUCED_59;
var 0..119439: X_INTRODUCED_62 ::var_is_introduced ;
var 0..119439: X_INTRODUCED_63 ::var_is_introduced ;
var 0..119439: X_INTRODUCED_64 ::var_is_introduced ;
var 0..119439: X_INTRODUCED_65 ::var_is_introduced ;
var 0..119439: X_INTRODUCED_66 ::var_is_introduced ;
var 0..119439: X_INTRODUCED_67 ::var_is_introduced ;
var 0..119439: X_INTRODUCED_68 ::var_is_introduced ;
var 0..119439: X_INTRODUCED_69 ::var_is_introduced ;
var 0..119439: X_INTRODUCED_70 ::var_is_introduced ;
var 0..119439: X_INTRODUCED_71 ::var_is_introduced ;
var 0..119439: X_INTRODUCED_72 ::var_is_introduced ;
var 0..119439: X_INTRODUCED_73 ::var_is_introduced ;
var 0..119439: X_INTRODUCED_74 ::var_is_introduced ;
var 0..119439: X_INTRODUCED_75 ::var_is_introduced ;
var 0..119439: X_INTRODUCED_76 ::var_is_introduced ;
var 0..9452: balance:: is_defined_var;
var 0..119439: X_INTRODUCED_94 ::var_is_introduced ;
var 0..119439: X_INTRODUCED_95 ::var_is_introduced ;
var 0..119439: X_INTRODUCED_96 ::var_is_introduced ;
var 0..119439: X_INTRODUCED_97 ::var_is_introduced ;
var 0..119439: X_INTRODUCED_98 ::var_is_introduced ;
var 0..119439: X_INTRODUCED_99 ::var_is_introduced ;
var 0..119439: X_INTRODUCED_100 ::var_is_introduced ;
var 0..119439: X_INTRODUCED_101 ::var_is_introduced ;
var 0..119439: X_INTRODUCED_102 ::var_is_introduced ;
var 0..119439: X_INTRODUCED_103 ::var_is_introduced ;
var 0..119439: X_INTRODUCED_104 ::var_is_introduced ;
var 0..119439: X_INTRODUCED_105 ::var_is_introduced ;
var 0..119439: X_INTRODUCED_106 ::var_is_introduced ;
var 0..119439: X_INTRODUCED_107 ::var_is_introduced ;
var 0..119439: X_INTRODUCED_126 ::var_is_introduced ;
var 0..119439: X_INTRODUCED_127 ::var_is_introduced ;
var 0..119439: X_INTRODUCED_128 ::var_is_introduced ;
var 0..119439: X_INTRODUCED_129 ::var_is_introduced ;
var 0..119439: X_INTRODUCED_130 ::var_is_introduced ;
var 0..119439: X_INTRODUCED_131 ::var_is_introduced ;
var 0..119439: X_INTRODUCED_132 ::var_is_introduced ;
var 0..119439: X_INTRODUCED_133 ::var_is_introduced ;
var 0..119439: X_INTRODUCED_134 ::var_is_introduced ;
var 0..119439: X_INTRODUCED_135 ::var_is_introduced ;
var 0..119439: X_INTRODUCED_136 ::var_is_introduced ;
var 0..119439: X_INTRODUCED_137 ::var_is_introduced ;
var 0..119439: X_INTRODUCED_138 ::var_is_introduced ;
var 0..119439: X_INTRODUCED_139 ::var_is_introduced ;
var 0..16: happiness:: is_defined_var;
var bool: X_INTRODUCED_142 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_143 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_144 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_145 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_146 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_147 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_148 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_149 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_150 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_151 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_152 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_153 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_154 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_155 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_156 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_157 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_158 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_159 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_160 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_161 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_162 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_163 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_164 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_165 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_166 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_167 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_168 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_169 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_170 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_171 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_172 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_173 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_174 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_175 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_176 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_177 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_178 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_179 ::var_is_introduced :: is_defined_var;
var -9452..16000: objective:: output_var:: is_defined_var;
array [1..60] of var int: Team:: output_array([1..60]) = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29,X_INTRODUCED_30,X_INTRODUCED_31,X_INTRODUCED_32,X_INTRODUCED_33,X_INTRODUCED_34,X_INTRODUCED_35,X_INTRODUCED_36,X_INTRODUCED_37,X_INTRODUCED_38,X_INTRODUCED_39,X_INTRODUCED_40,X_INTRODUCED_41,X_INTRODUCED_42,X_INTRODUCED_43,X_INTRODUCED_44,X_INTRODUCED_45,X_INTRODUCED_46,X_INTRODUCED_47,X_INTRODUCED_48,X_INTRODUCED_49,X_INTRODUCED_50,X_INTRODUCED_51,X_INTRODUCED_52,X_INTRODUCED_53,X_INTRODUCED_54,X_INTRODUCED_55,X_INTRODUCED_56,X_INTRODUCED_57,X_INTRODUCED_58,X_INTRODUCED_59];
array [1..15] of var int: TeamRating = [X_INTRODUCED_62,X_INTRODUCED_63,X_INTRODUCED_64,X_INTRODUCED_65,X_INTRODUCED_66,X_INTRODUCED_67,X_INTRODUCED_68,X_INTRODUCED_69,X_INTRODUCED_70,X_INTRODUCED_71,X_INTRODUCED_72,X_INTRODUCED_73,X_INTRODUCED_74,X_INTRODUCED_75,X_INTRODUCED_76];
array [1..15] of var int: X_INTRODUCED_60 ::var_is_introduced  = [X_INTRODUCED_62,X_INTRODUCED_63,X_INTRODUCED_64,X_INTRODUCED_65,X_INTRODUCED_66,X_INTRODUCED_67,X_INTRODUCED_68,X_INTRODUCED_69,X_INTRODUCED_70,X_INTRODUCED_71,X_INTRODUCED_72,X_INTRODUCED_73,X_INTRODUCED_74,X_INTRODUCED_75,X_INTRODUCED_76];
array [1..15] of var int: X_INTRODUCED_185 ::var_is_introduced  = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15];
array [1..15] of var int: X_INTRODUCED_186 ::var_is_introduced  = [X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29];
array [1..15] of var int: X_INTRODUCED_187 ::var_is_introduced  = [X_INTRODUCED_30,X_INTRODUCED_31,X_INTRODUCED_32,X_INTRODUCED_33,X_INTRODUCED_34,X_INTRODUCED_35,X_INTRODUCED_36,X_INTRODUCED_37,X_INTRODUCED_38,X_INTRODUCED_39,X_INTRODUCED_40,X_INTRODUCED_41,X_INTRODUCED_42,X_INTRODUCED_43,X_INTRODUCED_44];
array [1..15] of var int: X_INTRODUCED_188 ::var_is_introduced  = [X_INTRODUCED_45,X_INTRODUCED_46,X_INTRODUCED_47,X_INTRODUCED_48,X_INTRODUCED_49,X_INTRODUCED_50,X_INTRODUCED_51,X_INTRODUCED_52,X_INTRODUCED_53,X_INTRODUCED_54,X_INTRODUCED_55,X_INTRODUCED_56,X_INTRODUCED_57,X_INTRODUCED_58,X_INTRODUCED_59];
constraint bin_packing_loadChoco(X_INTRODUCED_60,Team,X_INTRODUCED_61);
constraint int_min(X_INTRODUCED_63,X_INTRODUCED_62,X_INTRODUCED_94);
constraint int_min(X_INTRODUCED_64,X_INTRODUCED_94,X_INTRODUCED_95);
constraint int_min(X_INTRODUCED_65,X_INTRODUCED_95,X_INTRODUCED_96);
constraint int_min(X_INTRODUCED_66,X_INTRODUCED_96,X_INTRODUCED_97);
constraint int_min(X_INTRODUCED_67,X_INTRODUCED_97,X_INTRODUCED_98);
constraint int_min(X_INTRODUCED_68,X_INTRODUCED_98,X_INTRODUCED_99);
constraint int_min(X_INTRODUCED_69,X_INTRODUCED_99,X_INTRODUCED_100);
constraint int_min(X_INTRODUCED_70,X_INTRODUCED_100,X_INTRODUCED_101);
constraint int_min(X_INTRODUCED_71,X_INTRODUCED_101,X_INTRODUCED_102);
constraint int_min(X_INTRODUCED_72,X_INTRODUCED_102,X_INTRODUCED_103);
constraint int_min(X_INTRODUCED_73,X_INTRODUCED_103,X_INTRODUCED_104);
constraint int_min(X_INTRODUCED_74,X_INTRODUCED_104,X_INTRODUCED_105);
constraint int_min(X_INTRODUCED_75,X_INTRODUCED_105,X_INTRODUCED_106);
constraint int_min(X_INTRODUCED_76,X_INTRODUCED_106,X_INTRODUCED_107);
constraint int_max(X_INTRODUCED_63,X_INTRODUCED_62,X_INTRODUCED_126);
constraint int_max(X_INTRODUCED_64,X_INTRODUCED_126,X_INTRODUCED_127);
constraint int_max(X_INTRODUCED_65,X_INTRODUCED_127,X_INTRODUCED_128);
constraint int_max(X_INTRODUCED_66,X_INTRODUCED_128,X_INTRODUCED_129);
constraint int_max(X_INTRODUCED_67,X_INTRODUCED_129,X_INTRODUCED_130);
constraint int_max(X_INTRODUCED_68,X_INTRODUCED_130,X_INTRODUCED_131);
constraint int_max(X_INTRODUCED_69,X_INTRODUCED_131,X_INTRODUCED_132);
constraint int_max(X_INTRODUCED_70,X_INTRODUCED_132,X_INTRODUCED_133);
constraint int_max(X_INTRODUCED_71,X_INTRODUCED_133,X_INTRODUCED_134);
constraint int_max(X_INTRODUCED_72,X_INTRODUCED_134,X_INTRODUCED_135);
constraint int_max(X_INTRODUCED_73,X_INTRODUCED_135,X_INTRODUCED_136);
constraint int_max(X_INTRODUCED_74,X_INTRODUCED_136,X_INTRODUCED_137);
constraint int_max(X_INTRODUCED_75,X_INTRODUCED_137,X_INTRODUCED_138);
constraint int_max(X_INTRODUCED_76,X_INTRODUCED_138,X_INTRODUCED_139);
constraint alldifferentChoco(X_INTRODUCED_185);
constraint alldifferentChoco(X_INTRODUCED_186);
constraint alldifferentChoco(X_INTRODUCED_187);
constraint alldifferentChoco(X_INTRODUCED_188);
constraint bin_packingChoco(4,Team,X_INTRODUCED_189);
constraint int_lin_eq([1,-1000,-1000,-1000,-1000,-1000,-1000,-1000,-1000,-1000,-1000,-1000,-1000,-1000,-1000,-1000,-1000,-1000,-1000,-1000,1,-1],[objective,X_INTRODUCED_143,X_INTRODUCED_145,X_INTRODUCED_147,X_INTRODUCED_149,X_INTRODUCED_151,X_INTRODUCED_153,X_INTRODUCED_155,X_INTRODUCED_157,X_INTRODUCED_159,X_INTRODUCED_161,X_INTRODUCED_163,X_INTRODUCED_165,X_INTRODUCED_167,X_INTRODUCED_169,X_INTRODUCED_171,X_INTRODUCED_173,X_INTRODUCED_175,X_INTRODUCED_177,X_INTRODUCED_179,X_INTRODUCED_139,X_INTRODUCED_107],0):: defines_var(objective);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_139,X_INTRODUCED_107,balance],0):: defines_var(balance);
constraint int_lin_eq([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[X_INTRODUCED_143,X_INTRODUCED_145,X_INTRODUCED_147,X_INTRODUCED_149,X_INTRODUCED_151,X_INTRODUCED_153,X_INTRODUCED_155,X_INTRODUCED_157,X_INTRODUCED_159,X_INTRODUCED_161,X_INTRODUCED_163,X_INTRODUCED_165,X_INTRODUCED_167,X_INTRODUCED_169,X_INTRODUCED_171,X_INTRODUCED_173,X_INTRODUCED_175,X_INTRODUCED_177,X_INTRODUCED_179,happiness],0):: defines_var(happiness);
constraint int_eq_reif(X_INTRODUCED_49,2,X_INTRODUCED_142):: defines_var(X_INTRODUCED_142);
constraint bool2int(X_INTRODUCED_142,X_INTRODUCED_143):: defines_var(X_INTRODUCED_143);
constraint int_eq_reif(8,X_INTRODUCED_21,X_INTRODUCED_144):: defines_var(X_INTRODUCED_144);
constraint bool2int(X_INTRODUCED_144,X_INTRODUCED_145):: defines_var(X_INTRODUCED_145);
constraint int_eq_reif(8,X_INTRODUCED_51,X_INTRODUCED_146):: defines_var(X_INTRODUCED_146);
constraint bool2int(X_INTRODUCED_146,X_INTRODUCED_147):: defines_var(X_INTRODUCED_147);
constraint int_eq_reif(X_INTRODUCED_55,8,X_INTRODUCED_148):: defines_var(X_INTRODUCED_148);
constraint bool2int(X_INTRODUCED_148,X_INTRODUCED_149):: defines_var(X_INTRODUCED_149);
constraint int_eq_reif(15,X_INTRODUCED_21,X_INTRODUCED_150):: defines_var(X_INTRODUCED_150);
constraint bool2int(X_INTRODUCED_150,X_INTRODUCED_151):: defines_var(X_INTRODUCED_151);
constraint int_eq_reif(15,X_INTRODUCED_32,X_INTRODUCED_152):: defines_var(X_INTRODUCED_152);
constraint bool2int(X_INTRODUCED_152,X_INTRODUCED_153):: defines_var(X_INTRODUCED_153);
constraint int_eq_reif(15,X_INTRODUCED_33,X_INTRODUCED_154):: defines_var(X_INTRODUCED_154);
constraint bool2int(X_INTRODUCED_154,X_INTRODUCED_155):: defines_var(X_INTRODUCED_155);
constraint int_eq_reif(X_INTRODUCED_37,15,X_INTRODUCED_156):: defines_var(X_INTRODUCED_156);
constraint bool2int(X_INTRODUCED_156,X_INTRODUCED_157):: defines_var(X_INTRODUCED_157);
constraint int_eq_reif(15,X_INTRODUCED_51,X_INTRODUCED_158):: defines_var(X_INTRODUCED_158);
constraint bool2int(X_INTRODUCED_158,X_INTRODUCED_159):: defines_var(X_INTRODUCED_159);
constraint int_eq_reif(X_INTRODUCED_55,15,X_INTRODUCED_160):: defines_var(X_INTRODUCED_160);
constraint bool2int(X_INTRODUCED_160,X_INTRODUCED_161):: defines_var(X_INTRODUCED_161);
constraint int_eq_reif(X_INTRODUCED_55,X_INTRODUCED_21,X_INTRODUCED_162):: defines_var(X_INTRODUCED_162);
constraint bool2int(X_INTRODUCED_162,X_INTRODUCED_163):: defines_var(X_INTRODUCED_163);
constraint int_eq_reif(X_INTRODUCED_22,X_INTRODUCED_42,X_INTRODUCED_164):: defines_var(X_INTRODUCED_164);
constraint bool2int(X_INTRODUCED_164,X_INTRODUCED_165):: defines_var(X_INTRODUCED_165);
constraint int_eq_reif(X_INTRODUCED_22,X_INTRODUCED_53,X_INTRODUCED_166):: defines_var(X_INTRODUCED_166);
constraint bool2int(X_INTRODUCED_166,X_INTRODUCED_167):: defines_var(X_INTRODUCED_167);
constraint int_eq_reif(X_INTRODUCED_26,X_INTRODUCED_56,X_INTRODUCED_168):: defines_var(X_INTRODUCED_168);
constraint bool2int(X_INTRODUCED_168,X_INTRODUCED_169):: defines_var(X_INTRODUCED_169);
constraint int_eq_reif(X_INTRODUCED_27,X_INTRODUCED_37,X_INTRODUCED_170):: defines_var(X_INTRODUCED_170);
constraint bool2int(X_INTRODUCED_170,X_INTRODUCED_171):: defines_var(X_INTRODUCED_171);
constraint int_eq_reif(X_INTRODUCED_27,X_INTRODUCED_53,X_INTRODUCED_172):: defines_var(X_INTRODUCED_172);
constraint bool2int(X_INTRODUCED_172,X_INTRODUCED_173):: defines_var(X_INTRODUCED_173);
constraint int_eq_reif(X_INTRODUCED_35,X_INTRODUCED_40,X_INTRODUCED_174):: defines_var(X_INTRODUCED_174);
constraint bool2int(X_INTRODUCED_174,X_INTRODUCED_175):: defines_var(X_INTRODUCED_175);
constraint int_eq_reif(X_INTRODUCED_48,X_INTRODUCED_52,X_INTRODUCED_176):: defines_var(X_INTRODUCED_176);
constraint bool2int(X_INTRODUCED_176,X_INTRODUCED_177):: defines_var(X_INTRODUCED_177);
constraint int_eq_reif(X_INTRODUCED_55,X_INTRODUCED_51,X_INTRODUCED_178):: defines_var(X_INTRODUCED_178);
constraint bool2int(X_INTRODUCED_178,X_INTRODUCED_179):: defines_var(X_INTRODUCED_179);
solve :: int_search(Team,input_order,indomain_min,complete) maximize objective;
