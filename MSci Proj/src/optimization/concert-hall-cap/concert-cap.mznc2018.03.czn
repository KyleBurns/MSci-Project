predicate alldifferentBut0Choco(array [int] of var int: x);
predicate value_precede_chain_intChoco(array [int] of int: c,array [int] of var int: x);
array [1..2] of int: X_INTRODUCED_38 = [1,2];
array [1..4] of int: X_INTRODUCED_39 = [3,4,5,6];
array [1..1] of int: X_INTRODUCED_40 = [7];
array [1..3] of int: X_INTRODUCED_41 = [8,9,10];
array [1..26] of int: X_INTRODUCED_126 = [1,-975,-975,-975,-975,-1554,-1920,-1920,-1920,-1920,-2158,-2158,-2158,-2158,-2158,-2158,-2158,-2158,-1482,-1482,-1482,-1482,-1482,-1482,-1482,-2016];
var {0,3,4,5,6,8,9,10}: X_INTRODUCED_0;
var {0,3,4,5,6,8,9,10}: X_INTRODUCED_1;
var {0,3,4,5,6,8,9,10}: X_INTRODUCED_2;
var {0,3,4,5,6,8,9,10}: X_INTRODUCED_3;
var {0,3,4,5,6,8,9,10}: X_INTRODUCED_4;
var {0,1,2,3,4,5,6,8,9,10}: X_INTRODUCED_8;
var {0,3,4,5,6}: X_INTRODUCED_9;
var {0,3,4,5,6}: X_INTRODUCED_10;
var {0,3,4,5,6}: X_INTRODUCED_11;
var {0,3,4,5,6}: X_INTRODUCED_12;
var {0,3,4,5,6}: X_INTRODUCED_13;
var {0,3,4,5,6}: X_INTRODUCED_14;
var {0,3,4,5,6}: X_INTRODUCED_15;
var 0..10: X_INTRODUCED_16;
var 0..10: X_INTRODUCED_17;
var 0..10: X_INTRODUCED_18;
var 0..10: X_INTRODUCED_19;
var 0..10: X_INTRODUCED_20;
var {0,3,4,5,6,8,9,10}: X_INTRODUCED_21;
var {0,3,4,5,6,8,9,10}: X_INTRODUCED_22;
var {0,3,4,5,6,8,9,10}: X_INTRODUCED_23;
var 0..10: X_INTRODUCED_24;
var 0..10: X_INTRODUCED_25;
var 0..10: X_INTRODUCED_26;
var 0..10: X_INTRODUCED_27;
var 0..42788: objective:: output_var:: is_defined_var;
var bool: X_INTRODUCED_42 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_43 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_46 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_47 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_49 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_50 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_52 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_53 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_55 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_56 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_59 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_60 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_63 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_64 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_66 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_67 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_69 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_70 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_72 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_73 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_76 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_77 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_79 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_80 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_82 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_83 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_85 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_86 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_88 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_89 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_91 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_92 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_94 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_95 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_97 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_98 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_101 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_102 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_104 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_105 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_107 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_108 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_110 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_111 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_113 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_114 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_116 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_117 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_119 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_120 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_127 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_128 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_129 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_130 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_131 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_132 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_133 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_135 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_136 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_137 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_138 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_139 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_140 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_141 ::var_is_introduced :: is_defined_var;
array [1..28] of var int: assign:: output_array([1..28]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,0,0,0,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27];
array [1..19] of var int: X_INTRODUCED_28 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26];
array [1..19] of var int: X_INTRODUCED_29 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26];
array [1..19] of var int: X_INTRODUCED_30 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26];
array [1..19] of var int: X_INTRODUCED_31 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26];
array [1..19] of var int: X_INTRODUCED_32 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26];
array [1..19] of var int: X_INTRODUCED_33 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26];
array [1..19] of var int: X_INTRODUCED_34 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26];
array [1..19] of var int: X_INTRODUCED_35 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26];
array [1..17] of var int: X_INTRODUCED_36 ::var_is_introduced  = [X_INTRODUCED_4,0,0,0,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_27];
array [1..26] of var int: X_INTRODUCED_125 ::var_is_introduced  = [objective,X_INTRODUCED_43,X_INTRODUCED_47,X_INTRODUCED_50,X_INTRODUCED_53,X_INTRODUCED_56,X_INTRODUCED_60,X_INTRODUCED_64,X_INTRODUCED_67,X_INTRODUCED_70,X_INTRODUCED_73,X_INTRODUCED_77,X_INTRODUCED_80,X_INTRODUCED_83,X_INTRODUCED_86,X_INTRODUCED_89,X_INTRODUCED_92,X_INTRODUCED_95,X_INTRODUCED_98,X_INTRODUCED_102,X_INTRODUCED_105,X_INTRODUCED_108,X_INTRODUCED_111,X_INTRODUCED_114,X_INTRODUCED_117,X_INTRODUCED_120];
array [1..38] of var int: X_INTRODUCED_142 ::var_is_introduced  = [X_INTRODUCED_135,1,X_INTRODUCED_136,X_INTRODUCED_137,X_INTRODUCED_138,X_INTRODUCED_139,1,1,X_INTRODUCED_140,X_INTRODUCED_141,X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,0,0,0,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27];
constraint alldifferentBut0Choco(X_INTRODUCED_28):: bounds;
constraint alldifferentBut0Choco(X_INTRODUCED_29):: bounds;
constraint alldifferentBut0Choco(X_INTRODUCED_30):: bounds;
constraint alldifferentBut0Choco(X_INTRODUCED_31):: bounds;
constraint alldifferentBut0Choco(X_INTRODUCED_32):: bounds;
constraint alldifferentBut0Choco(X_INTRODUCED_33):: bounds;
constraint alldifferentBut0Choco(X_INTRODUCED_34):: bounds;
constraint alldifferentBut0Choco(X_INTRODUCED_35):: bounds;
constraint alldifferentBut0Choco(X_INTRODUCED_36):: bounds;
constraint value_precede_chain_intChoco(X_INTRODUCED_38,assign);
constraint value_precede_chain_intChoco(X_INTRODUCED_39,assign);
constraint value_precede_chain_intChoco(X_INTRODUCED_40,assign);
constraint value_precede_chain_intChoco(X_INTRODUCED_41,assign);
constraint int_lin_eq(X_INTRODUCED_126,X_INTRODUCED_125,0):: defines_var(objective);
constraint int_le_reif(1,X_INTRODUCED_0,X_INTRODUCED_42):: defines_var(X_INTRODUCED_42);
constraint bool2int(X_INTRODUCED_42,X_INTRODUCED_43):: defines_var(X_INTRODUCED_43);
constraint int_le_reif(1,X_INTRODUCED_1,X_INTRODUCED_46):: defines_var(X_INTRODUCED_46);
constraint bool2int(X_INTRODUCED_46,X_INTRODUCED_47):: defines_var(X_INTRODUCED_47);
constraint int_le_reif(1,X_INTRODUCED_2,X_INTRODUCED_49):: defines_var(X_INTRODUCED_49);
constraint bool2int(X_INTRODUCED_49,X_INTRODUCED_50):: defines_var(X_INTRODUCED_50);
constraint int_le_reif(1,X_INTRODUCED_3,X_INTRODUCED_52):: defines_var(X_INTRODUCED_52);
constraint bool2int(X_INTRODUCED_52,X_INTRODUCED_53):: defines_var(X_INTRODUCED_53);
constraint int_le_reif(1,X_INTRODUCED_4,X_INTRODUCED_55):: defines_var(X_INTRODUCED_55);
constraint bool2int(X_INTRODUCED_55,X_INTRODUCED_56):: defines_var(X_INTRODUCED_56);
constraint int_le_reif(1,X_INTRODUCED_8,X_INTRODUCED_59):: defines_var(X_INTRODUCED_59);
constraint bool2int(X_INTRODUCED_59,X_INTRODUCED_60):: defines_var(X_INTRODUCED_60);
constraint int_le_reif(1,X_INTRODUCED_9,X_INTRODUCED_63):: defines_var(X_INTRODUCED_63);
constraint bool2int(X_INTRODUCED_63,X_INTRODUCED_64):: defines_var(X_INTRODUCED_64);
constraint int_le_reif(1,X_INTRODUCED_10,X_INTRODUCED_66):: defines_var(X_INTRODUCED_66);
constraint bool2int(X_INTRODUCED_66,X_INTRODUCED_67):: defines_var(X_INTRODUCED_67);
constraint int_le_reif(1,X_INTRODUCED_11,X_INTRODUCED_69):: defines_var(X_INTRODUCED_69);
constraint bool2int(X_INTRODUCED_69,X_INTRODUCED_70):: defines_var(X_INTRODUCED_70);
constraint int_le_reif(1,X_INTRODUCED_12,X_INTRODUCED_72):: defines_var(X_INTRODUCED_72);
constraint bool2int(X_INTRODUCED_72,X_INTRODUCED_73):: defines_var(X_INTRODUCED_73);
constraint int_le_reif(1,X_INTRODUCED_13,X_INTRODUCED_76):: defines_var(X_INTRODUCED_76);
constraint bool2int(X_INTRODUCED_76,X_INTRODUCED_77):: defines_var(X_INTRODUCED_77);
constraint int_le_reif(1,X_INTRODUCED_14,X_INTRODUCED_79):: defines_var(X_INTRODUCED_79);
constraint bool2int(X_INTRODUCED_79,X_INTRODUCED_80):: defines_var(X_INTRODUCED_80);
constraint int_le_reif(1,X_INTRODUCED_15,X_INTRODUCED_82):: defines_var(X_INTRODUCED_82);
constraint bool2int(X_INTRODUCED_82,X_INTRODUCED_83):: defines_var(X_INTRODUCED_83);
constraint int_le_reif(1,X_INTRODUCED_16,X_INTRODUCED_85):: defines_var(X_INTRODUCED_85);
constraint bool2int(X_INTRODUCED_85,X_INTRODUCED_86):: defines_var(X_INTRODUCED_86);
constraint int_le_reif(1,X_INTRODUCED_17,X_INTRODUCED_88):: defines_var(X_INTRODUCED_88);
constraint bool2int(X_INTRODUCED_88,X_INTRODUCED_89):: defines_var(X_INTRODUCED_89);
constraint int_le_reif(1,X_INTRODUCED_18,X_INTRODUCED_91):: defines_var(X_INTRODUCED_91);
constraint bool2int(X_INTRODUCED_91,X_INTRODUCED_92):: defines_var(X_INTRODUCED_92);
constraint int_le_reif(1,X_INTRODUCED_19,X_INTRODUCED_94):: defines_var(X_INTRODUCED_94);
constraint bool2int(X_INTRODUCED_94,X_INTRODUCED_95):: defines_var(X_INTRODUCED_95);
constraint int_le_reif(1,X_INTRODUCED_20,X_INTRODUCED_97):: defines_var(X_INTRODUCED_97);
constraint bool2int(X_INTRODUCED_97,X_INTRODUCED_98):: defines_var(X_INTRODUCED_98);
constraint int_le_reif(1,X_INTRODUCED_21,X_INTRODUCED_101):: defines_var(X_INTRODUCED_101);
constraint bool2int(X_INTRODUCED_101,X_INTRODUCED_102):: defines_var(X_INTRODUCED_102);
constraint int_le_reif(1,X_INTRODUCED_22,X_INTRODUCED_104):: defines_var(X_INTRODUCED_104);
constraint bool2int(X_INTRODUCED_104,X_INTRODUCED_105):: defines_var(X_INTRODUCED_105);
constraint int_le_reif(1,X_INTRODUCED_23,X_INTRODUCED_107):: defines_var(X_INTRODUCED_107);
constraint bool2int(X_INTRODUCED_107,X_INTRODUCED_108):: defines_var(X_INTRODUCED_108);
constraint int_le_reif(1,X_INTRODUCED_24,X_INTRODUCED_110):: defines_var(X_INTRODUCED_110);
constraint bool2int(X_INTRODUCED_110,X_INTRODUCED_111):: defines_var(X_INTRODUCED_111);
constraint int_le_reif(1,X_INTRODUCED_25,X_INTRODUCED_113):: defines_var(X_INTRODUCED_113);
constraint bool2int(X_INTRODUCED_113,X_INTRODUCED_114):: defines_var(X_INTRODUCED_114);
constraint int_le_reif(1,X_INTRODUCED_26,X_INTRODUCED_116):: defines_var(X_INTRODUCED_116);
constraint bool2int(X_INTRODUCED_116,X_INTRODUCED_117):: defines_var(X_INTRODUCED_117);
constraint int_le_reif(1,X_INTRODUCED_27,X_INTRODUCED_119):: defines_var(X_INTRODUCED_119);
constraint bool2int(X_INTRODUCED_119,X_INTRODUCED_120):: defines_var(X_INTRODUCED_120);
constraint int_le_reif(X_INTRODUCED_4,0,X_INTRODUCED_127):: defines_var(X_INTRODUCED_127);
constraint int_le_reif(X_INTRODUCED_0,0,X_INTRODUCED_128):: defines_var(X_INTRODUCED_128);
constraint int_le_reif(X_INTRODUCED_1,0,X_INTRODUCED_129):: defines_var(X_INTRODUCED_129);
constraint int_le_reif(X_INTRODUCED_2,0,X_INTRODUCED_130):: defines_var(X_INTRODUCED_130);
constraint int_le_reif(X_INTRODUCED_3,0,X_INTRODUCED_131):: defines_var(X_INTRODUCED_131);
constraint int_le_reif(X_INTRODUCED_8,0,X_INTRODUCED_132):: defines_var(X_INTRODUCED_132);
constraint int_le_reif(X_INTRODUCED_9,0,X_INTRODUCED_133):: defines_var(X_INTRODUCED_133);
constraint bool2int(X_INTRODUCED_127,X_INTRODUCED_135):: defines_var(X_INTRODUCED_135);
constraint bool2int(X_INTRODUCED_128,X_INTRODUCED_136):: defines_var(X_INTRODUCED_136);
constraint bool2int(X_INTRODUCED_129,X_INTRODUCED_137):: defines_var(X_INTRODUCED_137);
constraint bool2int(X_INTRODUCED_130,X_INTRODUCED_138):: defines_var(X_INTRODUCED_138);
constraint bool2int(X_INTRODUCED_131,X_INTRODUCED_139):: defines_var(X_INTRODUCED_139);
constraint bool2int(X_INTRODUCED_132,X_INTRODUCED_140):: defines_var(X_INTRODUCED_140);
constraint bool2int(X_INTRODUCED_133,X_INTRODUCED_141):: defines_var(X_INTRODUCED_141);
solve :: int_search(X_INTRODUCED_142,input_order,indomain_min,complete) maximize objective;
