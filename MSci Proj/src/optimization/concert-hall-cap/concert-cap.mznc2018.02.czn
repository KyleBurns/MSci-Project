predicate alldifferentBut0Choco(array [int] of var int: x);
predicate value_precede_chain_intChoco(array [int] of int: c,array [int] of var int: x);
array [1..2] of int: X_INTRODUCED_44 = [1,2];
array [1..4] of int: X_INTRODUCED_45 = [3,4,5,6];
array [1..1] of int: X_INTRODUCED_46 = [7];
array [1..3] of int: X_INTRODUCED_47 = [8,9,10];
array [1..25] of int: X_INTRODUCED_129 = [1,-1748,-1748,-1748,-1748,-1748,-5880,-5880,-5880,-5880,-5880,-5880,-5880,-1056,-1056,-1056,-1056,-1056,-1056,-1056,-910,-600,-600,-600,-2072];
var {0,3,4,5,6,8,9,10}: X_INTRODUCED_0;
var {0,3,4,5,6,8,9,10}: X_INTRODUCED_1;
var {0,3,4,5,6,8,9,10}: X_INTRODUCED_2;
var {0,3,4,5,6,8,9,10}: X_INTRODUCED_3;
var {0,3,4,5,6,8,9,10}: X_INTRODUCED_4;
var {0,1,2,3,4,5,6,8,9,10}: X_INTRODUCED_7;
var {0,1,2,3,4,5,6,8,9,10}: X_INTRODUCED_8;
var {0,1,2,3,4,5,6,8,9,10}: X_INTRODUCED_9;
var {0,1,2,3,4,5,6,8,9,10}: X_INTRODUCED_10;
var {0,1,2,3,4,5,6,8,9,10}: X_INTRODUCED_11;
var {0,1,2,3,4,5,6,8,9,10}: X_INTRODUCED_12;
var {0,1,2,3,4,5,6,8,9,10}: X_INTRODUCED_13;
var {0,1,2,3,4,5,6,8,9,10}: X_INTRODUCED_14;
var {0,3,4,5,6}: X_INTRODUCED_15;
var {0,3,4,5,6}: X_INTRODUCED_16;
var {0,3,4,5,6}: X_INTRODUCED_17;
var {0,3,4,5,6}: X_INTRODUCED_18;
var {0,3,4,5,6}: X_INTRODUCED_19;
var {0,3,4,5,6}: X_INTRODUCED_20;
var 0..10: X_INTRODUCED_21;
var 0..10: X_INTRODUCED_22;
var 0..10: X_INTRODUCED_23;
var 0..10: X_INTRODUCED_24;
var {0,3,4,5,6,8,9,10}: X_INTRODUCED_25;
var 0..62074: objective:: output_var:: is_defined_var;
var bool: X_INTRODUCED_48 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_49 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_52 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_53 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_55 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_56 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_58 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_59 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_61 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_62 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_64 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_65 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_68 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_69 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_71 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_72 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_74 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_75 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_77 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_78 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_80 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_81 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_83 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_84 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_86 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_87 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_90 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_91 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_93 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_94 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_96 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_97 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_99 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_100 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_102 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_103 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_105 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_106 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_108 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_109 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_112 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_113 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_116 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_117 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_119 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_120 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_122 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_123 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_130 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_131 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_132 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_133 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_134 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_135 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_136 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_137 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_139 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_140 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_141 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_142 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_143 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_144 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_145 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_146 ::var_is_introduced :: is_defined_var;
array [1..26] of var int: assign:: output_array([1..26]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,0,0,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25];
array [1..15] of var int: X_INTRODUCED_26 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,0,0,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_25];
array [1..15] of var int: X_INTRODUCED_27 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,0,0,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_25];
array [1..15] of var int: X_INTRODUCED_28 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,0,0,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_25];
array [1..15] of var int: X_INTRODUCED_29 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,0,0,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_25];
array [1..15] of var int: X_INTRODUCED_30 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,0,0,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_25];
array [1..15] of var int: X_INTRODUCED_31 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,0,0,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_25];
array [1..15] of var int: X_INTRODUCED_32 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,0,0,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_25];
array [1..18] of var int: X_INTRODUCED_33 ::var_is_introduced  = [X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25];
array [1..18] of var int: X_INTRODUCED_34 ::var_is_introduced  = [X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25];
array [1..18] of var int: X_INTRODUCED_35 ::var_is_introduced  = [X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25];
array [1..18] of var int: X_INTRODUCED_36 ::var_is_introduced  = [X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25];
array [1..18] of var int: X_INTRODUCED_37 ::var_is_introduced  = [X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25];
array [1..18] of var int: X_INTRODUCED_38 ::var_is_introduced  = [X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25];
array [1..18] of var int: X_INTRODUCED_39 ::var_is_introduced  = [X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25];
array [1..11] of var int: X_INTRODUCED_40 ::var_is_introduced  = [X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24];
array [1..18] of var int: X_INTRODUCED_41 ::var_is_introduced  = [X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25];
array [1..25] of var int: X_INTRODUCED_128 ::var_is_introduced  = [objective,X_INTRODUCED_49,X_INTRODUCED_53,X_INTRODUCED_56,X_INTRODUCED_59,X_INTRODUCED_62,X_INTRODUCED_65,X_INTRODUCED_69,X_INTRODUCED_72,X_INTRODUCED_75,X_INTRODUCED_78,X_INTRODUCED_81,X_INTRODUCED_84,X_INTRODUCED_87,X_INTRODUCED_91,X_INTRODUCED_94,X_INTRODUCED_97,X_INTRODUCED_100,X_INTRODUCED_103,X_INTRODUCED_106,X_INTRODUCED_109,X_INTRODUCED_113,X_INTRODUCED_117,X_INTRODUCED_120,X_INTRODUCED_123];
array [1..36] of var int: X_INTRODUCED_147 ::var_is_introduced  = [X_INTRODUCED_139,X_INTRODUCED_140,X_INTRODUCED_141,X_INTRODUCED_142,X_INTRODUCED_143,X_INTRODUCED_144,X_INTRODUCED_145,X_INTRODUCED_146,1,1,X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,0,0,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25];
constraint alldifferentBut0Choco(X_INTRODUCED_26):: bounds;
constraint alldifferentBut0Choco(X_INTRODUCED_27):: bounds;
constraint alldifferentBut0Choco(X_INTRODUCED_28):: bounds;
constraint alldifferentBut0Choco(X_INTRODUCED_29):: bounds;
constraint alldifferentBut0Choco(X_INTRODUCED_30):: bounds;
constraint alldifferentBut0Choco(X_INTRODUCED_31):: bounds;
constraint alldifferentBut0Choco(X_INTRODUCED_32):: bounds;
constraint alldifferentBut0Choco(X_INTRODUCED_33):: bounds;
constraint alldifferentBut0Choco(X_INTRODUCED_34):: bounds;
constraint alldifferentBut0Choco(X_INTRODUCED_35):: bounds;
constraint alldifferentBut0Choco(X_INTRODUCED_36):: bounds;
constraint alldifferentBut0Choco(X_INTRODUCED_37):: bounds;
constraint alldifferentBut0Choco(X_INTRODUCED_38):: bounds;
constraint alldifferentBut0Choco(X_INTRODUCED_39):: bounds;
constraint alldifferentBut0Choco(X_INTRODUCED_40):: bounds;
constraint alldifferentBut0Choco(X_INTRODUCED_41):: bounds;
constraint value_precede_chain_intChoco(X_INTRODUCED_44,assign);
constraint value_precede_chain_intChoco(X_INTRODUCED_45,assign);
constraint value_precede_chain_intChoco(X_INTRODUCED_46,assign);
constraint value_precede_chain_intChoco(X_INTRODUCED_47,assign);
constraint int_lin_eq(X_INTRODUCED_129,X_INTRODUCED_128,0):: defines_var(objective);
constraint int_le_reif(1,X_INTRODUCED_0,X_INTRODUCED_48):: defines_var(X_INTRODUCED_48);
constraint bool2int(X_INTRODUCED_48,X_INTRODUCED_49):: defines_var(X_INTRODUCED_49);
constraint int_le_reif(1,X_INTRODUCED_1,X_INTRODUCED_52):: defines_var(X_INTRODUCED_52);
constraint bool2int(X_INTRODUCED_52,X_INTRODUCED_53):: defines_var(X_INTRODUCED_53);
constraint int_le_reif(1,X_INTRODUCED_2,X_INTRODUCED_55):: defines_var(X_INTRODUCED_55);
constraint bool2int(X_INTRODUCED_55,X_INTRODUCED_56):: defines_var(X_INTRODUCED_56);
constraint int_le_reif(1,X_INTRODUCED_3,X_INTRODUCED_58):: defines_var(X_INTRODUCED_58);
constraint bool2int(X_INTRODUCED_58,X_INTRODUCED_59):: defines_var(X_INTRODUCED_59);
constraint int_le_reif(1,X_INTRODUCED_4,X_INTRODUCED_61):: defines_var(X_INTRODUCED_61);
constraint bool2int(X_INTRODUCED_61,X_INTRODUCED_62):: defines_var(X_INTRODUCED_62);
constraint int_le_reif(1,X_INTRODUCED_7,X_INTRODUCED_64):: defines_var(X_INTRODUCED_64);
constraint bool2int(X_INTRODUCED_64,X_INTRODUCED_65):: defines_var(X_INTRODUCED_65);
constraint int_le_reif(1,X_INTRODUCED_8,X_INTRODUCED_68):: defines_var(X_INTRODUCED_68);
constraint bool2int(X_INTRODUCED_68,X_INTRODUCED_69):: defines_var(X_INTRODUCED_69);
constraint int_le_reif(1,X_INTRODUCED_9,X_INTRODUCED_71):: defines_var(X_INTRODUCED_71);
constraint bool2int(X_INTRODUCED_71,X_INTRODUCED_72):: defines_var(X_INTRODUCED_72);
constraint int_le_reif(1,X_INTRODUCED_10,X_INTRODUCED_74):: defines_var(X_INTRODUCED_74);
constraint bool2int(X_INTRODUCED_74,X_INTRODUCED_75):: defines_var(X_INTRODUCED_75);
constraint int_le_reif(1,X_INTRODUCED_11,X_INTRODUCED_77):: defines_var(X_INTRODUCED_77);
constraint bool2int(X_INTRODUCED_77,X_INTRODUCED_78):: defines_var(X_INTRODUCED_78);
constraint int_le_reif(1,X_INTRODUCED_12,X_INTRODUCED_80):: defines_var(X_INTRODUCED_80);
constraint bool2int(X_INTRODUCED_80,X_INTRODUCED_81):: defines_var(X_INTRODUCED_81);
constraint int_le_reif(1,X_INTRODUCED_13,X_INTRODUCED_83):: defines_var(X_INTRODUCED_83);
constraint bool2int(X_INTRODUCED_83,X_INTRODUCED_84):: defines_var(X_INTRODUCED_84);
constraint int_le_reif(1,X_INTRODUCED_14,X_INTRODUCED_86):: defines_var(X_INTRODUCED_86);
constraint bool2int(X_INTRODUCED_86,X_INTRODUCED_87):: defines_var(X_INTRODUCED_87);
constraint int_le_reif(1,X_INTRODUCED_15,X_INTRODUCED_90):: defines_var(X_INTRODUCED_90);
constraint bool2int(X_INTRODUCED_90,X_INTRODUCED_91):: defines_var(X_INTRODUCED_91);
constraint int_le_reif(1,X_INTRODUCED_16,X_INTRODUCED_93):: defines_var(X_INTRODUCED_93);
constraint bool2int(X_INTRODUCED_93,X_INTRODUCED_94):: defines_var(X_INTRODUCED_94);
constraint int_le_reif(1,X_INTRODUCED_17,X_INTRODUCED_96):: defines_var(X_INTRODUCED_96);
constraint bool2int(X_INTRODUCED_96,X_INTRODUCED_97):: defines_var(X_INTRODUCED_97);
constraint int_le_reif(1,X_INTRODUCED_18,X_INTRODUCED_99):: defines_var(X_INTRODUCED_99);
constraint bool2int(X_INTRODUCED_99,X_INTRODUCED_100):: defines_var(X_INTRODUCED_100);
constraint int_le_reif(1,X_INTRODUCED_19,X_INTRODUCED_102):: defines_var(X_INTRODUCED_102);
constraint bool2int(X_INTRODUCED_102,X_INTRODUCED_103):: defines_var(X_INTRODUCED_103);
constraint int_le_reif(1,X_INTRODUCED_20,X_INTRODUCED_105):: defines_var(X_INTRODUCED_105);
constraint bool2int(X_INTRODUCED_105,X_INTRODUCED_106):: defines_var(X_INTRODUCED_106);
constraint int_le_reif(1,X_INTRODUCED_21,X_INTRODUCED_108):: defines_var(X_INTRODUCED_108);
constraint bool2int(X_INTRODUCED_108,X_INTRODUCED_109):: defines_var(X_INTRODUCED_109);
constraint int_le_reif(1,X_INTRODUCED_22,X_INTRODUCED_112):: defines_var(X_INTRODUCED_112);
constraint bool2int(X_INTRODUCED_112,X_INTRODUCED_113):: defines_var(X_INTRODUCED_113);
constraint int_le_reif(1,X_INTRODUCED_23,X_INTRODUCED_116):: defines_var(X_INTRODUCED_116);
constraint bool2int(X_INTRODUCED_116,X_INTRODUCED_117):: defines_var(X_INTRODUCED_117);
constraint int_le_reif(1,X_INTRODUCED_24,X_INTRODUCED_119):: defines_var(X_INTRODUCED_119);
constraint bool2int(X_INTRODUCED_119,X_INTRODUCED_120):: defines_var(X_INTRODUCED_120);
constraint int_le_reif(1,X_INTRODUCED_25,X_INTRODUCED_122):: defines_var(X_INTRODUCED_122);
constraint bool2int(X_INTRODUCED_122,X_INTRODUCED_123):: defines_var(X_INTRODUCED_123);
constraint int_le_reif(X_INTRODUCED_7,0,X_INTRODUCED_130):: defines_var(X_INTRODUCED_130);
constraint int_le_reif(X_INTRODUCED_8,0,X_INTRODUCED_131):: defines_var(X_INTRODUCED_131);
constraint int_le_reif(X_INTRODUCED_9,0,X_INTRODUCED_132):: defines_var(X_INTRODUCED_132);
constraint int_le_reif(X_INTRODUCED_0,0,X_INTRODUCED_133):: defines_var(X_INTRODUCED_133);
constraint int_le_reif(X_INTRODUCED_1,0,X_INTRODUCED_134):: defines_var(X_INTRODUCED_134);
constraint int_le_reif(X_INTRODUCED_2,0,X_INTRODUCED_135):: defines_var(X_INTRODUCED_135);
constraint int_le_reif(X_INTRODUCED_3,0,X_INTRODUCED_136):: defines_var(X_INTRODUCED_136);
constraint int_le_reif(X_INTRODUCED_4,0,X_INTRODUCED_137):: defines_var(X_INTRODUCED_137);
constraint bool2int(X_INTRODUCED_130,X_INTRODUCED_139):: defines_var(X_INTRODUCED_139);
constraint bool2int(X_INTRODUCED_131,X_INTRODUCED_140):: defines_var(X_INTRODUCED_140);
constraint bool2int(X_INTRODUCED_132,X_INTRODUCED_141):: defines_var(X_INTRODUCED_141);
constraint bool2int(X_INTRODUCED_133,X_INTRODUCED_142):: defines_var(X_INTRODUCED_142);
constraint bool2int(X_INTRODUCED_134,X_INTRODUCED_143):: defines_var(X_INTRODUCED_143);
constraint bool2int(X_INTRODUCED_135,X_INTRODUCED_144):: defines_var(X_INTRODUCED_144);
constraint bool2int(X_INTRODUCED_136,X_INTRODUCED_145):: defines_var(X_INTRODUCED_145);
constraint bool2int(X_INTRODUCED_137,X_INTRODUCED_146):: defines_var(X_INTRODUCED_146);
solve :: int_search(X_INTRODUCED_147,input_order,indomain_min,complete) maximize objective;
