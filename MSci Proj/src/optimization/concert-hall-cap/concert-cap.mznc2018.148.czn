predicate alldifferentBut0Choco(array [int] of var int: x);
predicate value_precede_chain_intChoco(array [int] of int: c,array [int] of var int: x);
array [1..2] of int: X_INTRODUCED_42 = [1,2];
array [1..4] of int: X_INTRODUCED_43 = [3,4,5,6];
array [1..2] of int: X_INTRODUCED_44 = [7,8];
array [1..2] of int: X_INTRODUCED_45 = [9,10];
array [1..35] of int: X_INTRODUCED_159 = [1,-2871,-2871,-2871,-2871,-2871,-2871,-510,-510,-510,-510,-510,-711,-711,-711,-2212,-2212,-2212,-2212,-2212,-2212,-2212,-1512,-1512,-1512,-1610,-1610,-1610,-1610,-1610,-528,-4355,-4355,-4355,-4355];
var {0,1,2,7,8}: X_INTRODUCED_0;
var {0,1,2,7,8}: X_INTRODUCED_1;
var {0,1,2,7,8}: X_INTRODUCED_2;
var {0,1,2,7,8}: X_INTRODUCED_3;
var {0,1,2,7,8}: X_INTRODUCED_4;
var 0..2: X_INTRODUCED_5;
var 0..2: X_INTRODUCED_6;
var 0..2: X_INTRODUCED_7;
var 0..8: X_INTRODUCED_8;
var {0,1,2,7,8}: X_INTRODUCED_9;
var {0,1,2,7,8}: X_INTRODUCED_10;
var {0,1,2,7,8}: X_INTRODUCED_11;
var {0,1,2,7,8}: X_INTRODUCED_12;
var {0,1,2,7,8}: X_INTRODUCED_13;
var {0,1,2,7,8}: X_INTRODUCED_14;
var {0,1,2,7,8}: X_INTRODUCED_15;
var 0..10: X_INTRODUCED_16;
var 0..10: X_INTRODUCED_17;
var 0..10: X_INTRODUCED_18;
var 0..10: X_INTRODUCED_19;
var {0,1,2,7,8}: X_INTRODUCED_20;
var {0,1,2,7,8}: X_INTRODUCED_21;
var 0..2: X_INTRODUCED_22;
var 0..2: X_INTRODUCED_23;
var 0..2: X_INTRODUCED_24;
var 0..2: X_INTRODUCED_25;
var 0..2: X_INTRODUCED_26;
var 0..2: X_INTRODUCED_27;
var 0..2: X_INTRODUCED_28;
var 0..2: X_INTRODUCED_29;
var 0..8: X_INTRODUCED_30;
var 0..8: X_INTRODUCED_31;
var 0..8: X_INTRODUCED_32;
var 0..8: X_INTRODUCED_33;
var 0..67927: objective:: output_var:: is_defined_var;
var bool: X_INTRODUCED_46 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_47 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_50 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_51 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_53 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_54 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_56 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_57 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_59 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_60 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_62 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_63 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_65 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_66 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_69 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_70 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_72 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_73 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_75 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_76 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_78 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_79 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_81 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_82 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_85 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_86 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_88 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_89 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_91 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_92 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_95 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_96 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_98 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_99 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_101 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_102 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_104 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_105 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_107 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_108 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_110 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_111 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_113 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_114 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_117 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_118 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_120 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_121 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_123 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_124 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_127 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_128 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_130 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_131 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_133 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_134 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_136 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_137 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_139 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_140 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_143 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_144 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_147 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_148 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_150 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_151 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_153 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_154 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_160 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_161 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_162 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_163 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_164 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_165 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_166 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_167 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_168 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_169 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_171 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_172 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_173 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_174 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_175 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_176 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_177 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_178 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_179 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_180 ::var_is_introduced :: is_defined_var;
array [1..34] of var int: assign:: output_array([1..34]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29,X_INTRODUCED_30,X_INTRODUCED_31,X_INTRODUCED_32,X_INTRODUCED_33];
array [1..22] of var int: X_INTRODUCED_34 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_29];
array [1..22] of var int: X_INTRODUCED_35 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_29];
array [1..22] of var int: X_INTRODUCED_36 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_29];
array [1..12] of var int: X_INTRODUCED_37 ::var_is_introduced  = [X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_30,X_INTRODUCED_31,X_INTRODUCED_32,X_INTRODUCED_33];
array [1..12] of var int: X_INTRODUCED_38 ::var_is_introduced  = [X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_30,X_INTRODUCED_31,X_INTRODUCED_32,X_INTRODUCED_33];
array [1..12] of var int: X_INTRODUCED_39 ::var_is_introduced  = [X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_30,X_INTRODUCED_31,X_INTRODUCED_32,X_INTRODUCED_33];
array [1..23] of var int: X_INTRODUCED_40 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_29,X_INTRODUCED_30,X_INTRODUCED_31,X_INTRODUCED_32,X_INTRODUCED_33];
array [1..35] of var int: X_INTRODUCED_158 ::var_is_introduced  = [objective,X_INTRODUCED_47,X_INTRODUCED_51,X_INTRODUCED_54,X_INTRODUCED_57,X_INTRODUCED_60,X_INTRODUCED_63,X_INTRODUCED_66,X_INTRODUCED_70,X_INTRODUCED_73,X_INTRODUCED_76,X_INTRODUCED_79,X_INTRODUCED_82,X_INTRODUCED_86,X_INTRODUCED_89,X_INTRODUCED_92,X_INTRODUCED_96,X_INTRODUCED_99,X_INTRODUCED_102,X_INTRODUCED_105,X_INTRODUCED_108,X_INTRODUCED_111,X_INTRODUCED_114,X_INTRODUCED_118,X_INTRODUCED_121,X_INTRODUCED_124,X_INTRODUCED_128,X_INTRODUCED_131,X_INTRODUCED_134,X_INTRODUCED_137,X_INTRODUCED_140,X_INTRODUCED_144,X_INTRODUCED_148,X_INTRODUCED_151,X_INTRODUCED_154];
array [1..44] of var int: X_INTRODUCED_181 ::var_is_introduced  = [X_INTRODUCED_171,X_INTRODUCED_172,X_INTRODUCED_173,X_INTRODUCED_174,X_INTRODUCED_175,X_INTRODUCED_176,X_INTRODUCED_177,X_INTRODUCED_178,X_INTRODUCED_179,X_INTRODUCED_180,X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29,X_INTRODUCED_30,X_INTRODUCED_31,X_INTRODUCED_32,X_INTRODUCED_33];
constraint alldifferentBut0Choco(X_INTRODUCED_34):: bounds;
constraint alldifferentBut0Choco(X_INTRODUCED_35):: bounds;
constraint alldifferentBut0Choco(X_INTRODUCED_36):: bounds;
constraint alldifferentBut0Choco(X_INTRODUCED_37):: bounds;
constraint alldifferentBut0Choco(X_INTRODUCED_38):: bounds;
constraint alldifferentBut0Choco(X_INTRODUCED_39):: bounds;
constraint alldifferentBut0Choco(X_INTRODUCED_40):: bounds;
constraint value_precede_chain_intChoco(X_INTRODUCED_42,assign);
constraint value_precede_chain_intChoco(X_INTRODUCED_43,assign);
constraint value_precede_chain_intChoco(X_INTRODUCED_44,assign);
constraint value_precede_chain_intChoco(X_INTRODUCED_45,assign);
constraint int_lin_eq(X_INTRODUCED_159,X_INTRODUCED_158,0):: defines_var(objective);
constraint int_le_reif(1,X_INTRODUCED_0,X_INTRODUCED_46):: defines_var(X_INTRODUCED_46);
constraint bool2int(X_INTRODUCED_46,X_INTRODUCED_47):: defines_var(X_INTRODUCED_47);
constraint int_le_reif(1,X_INTRODUCED_1,X_INTRODUCED_50):: defines_var(X_INTRODUCED_50);
constraint bool2int(X_INTRODUCED_50,X_INTRODUCED_51):: defines_var(X_INTRODUCED_51);
constraint int_le_reif(1,X_INTRODUCED_2,X_INTRODUCED_53):: defines_var(X_INTRODUCED_53);
constraint bool2int(X_INTRODUCED_53,X_INTRODUCED_54):: defines_var(X_INTRODUCED_54);
constraint int_le_reif(1,X_INTRODUCED_3,X_INTRODUCED_56):: defines_var(X_INTRODUCED_56);
constraint bool2int(X_INTRODUCED_56,X_INTRODUCED_57):: defines_var(X_INTRODUCED_57);
constraint int_le_reif(1,X_INTRODUCED_4,X_INTRODUCED_59):: defines_var(X_INTRODUCED_59);
constraint bool2int(X_INTRODUCED_59,X_INTRODUCED_60):: defines_var(X_INTRODUCED_60);
constraint int_le_reif(1,X_INTRODUCED_5,X_INTRODUCED_62):: defines_var(X_INTRODUCED_62);
constraint bool2int(X_INTRODUCED_62,X_INTRODUCED_63):: defines_var(X_INTRODUCED_63);
constraint int_le_reif(1,X_INTRODUCED_6,X_INTRODUCED_65):: defines_var(X_INTRODUCED_65);
constraint bool2int(X_INTRODUCED_65,X_INTRODUCED_66):: defines_var(X_INTRODUCED_66);
constraint int_le_reif(1,X_INTRODUCED_7,X_INTRODUCED_69):: defines_var(X_INTRODUCED_69);
constraint bool2int(X_INTRODUCED_69,X_INTRODUCED_70):: defines_var(X_INTRODUCED_70);
constraint int_le_reif(1,X_INTRODUCED_8,X_INTRODUCED_72):: defines_var(X_INTRODUCED_72);
constraint bool2int(X_INTRODUCED_72,X_INTRODUCED_73):: defines_var(X_INTRODUCED_73);
constraint int_le_reif(1,X_INTRODUCED_9,X_INTRODUCED_75):: defines_var(X_INTRODUCED_75);
constraint bool2int(X_INTRODUCED_75,X_INTRODUCED_76):: defines_var(X_INTRODUCED_76);
constraint int_le_reif(1,X_INTRODUCED_10,X_INTRODUCED_78):: defines_var(X_INTRODUCED_78);
constraint bool2int(X_INTRODUCED_78,X_INTRODUCED_79):: defines_var(X_INTRODUCED_79);
constraint int_le_reif(1,X_INTRODUCED_11,X_INTRODUCED_81):: defines_var(X_INTRODUCED_81);
constraint bool2int(X_INTRODUCED_81,X_INTRODUCED_82):: defines_var(X_INTRODUCED_82);
constraint int_le_reif(1,X_INTRODUCED_12,X_INTRODUCED_85):: defines_var(X_INTRODUCED_85);
constraint bool2int(X_INTRODUCED_85,X_INTRODUCED_86):: defines_var(X_INTRODUCED_86);
constraint int_le_reif(1,X_INTRODUCED_13,X_INTRODUCED_88):: defines_var(X_INTRODUCED_88);
constraint bool2int(X_INTRODUCED_88,X_INTRODUCED_89):: defines_var(X_INTRODUCED_89);
constraint int_le_reif(1,X_INTRODUCED_14,X_INTRODUCED_91):: defines_var(X_INTRODUCED_91);
constraint bool2int(X_INTRODUCED_91,X_INTRODUCED_92):: defines_var(X_INTRODUCED_92);
constraint int_le_reif(1,X_INTRODUCED_15,X_INTRODUCED_95):: defines_var(X_INTRODUCED_95);
constraint bool2int(X_INTRODUCED_95,X_INTRODUCED_96):: defines_var(X_INTRODUCED_96);
constraint int_le_reif(1,X_INTRODUCED_16,X_INTRODUCED_98):: defines_var(X_INTRODUCED_98);
constraint bool2int(X_INTRODUCED_98,X_INTRODUCED_99):: defines_var(X_INTRODUCED_99);
constraint int_le_reif(1,X_INTRODUCED_17,X_INTRODUCED_101):: defines_var(X_INTRODUCED_101);
constraint bool2int(X_INTRODUCED_101,X_INTRODUCED_102):: defines_var(X_INTRODUCED_102);
constraint int_le_reif(1,X_INTRODUCED_18,X_INTRODUCED_104):: defines_var(X_INTRODUCED_104);
constraint bool2int(X_INTRODUCED_104,X_INTRODUCED_105):: defines_var(X_INTRODUCED_105);
constraint int_le_reif(1,X_INTRODUCED_19,X_INTRODUCED_107):: defines_var(X_INTRODUCED_107);
constraint bool2int(X_INTRODUCED_107,X_INTRODUCED_108):: defines_var(X_INTRODUCED_108);
constraint int_le_reif(1,X_INTRODUCED_20,X_INTRODUCED_110):: defines_var(X_INTRODUCED_110);
constraint bool2int(X_INTRODUCED_110,X_INTRODUCED_111):: defines_var(X_INTRODUCED_111);
constraint int_le_reif(1,X_INTRODUCED_21,X_INTRODUCED_113):: defines_var(X_INTRODUCED_113);
constraint bool2int(X_INTRODUCED_113,X_INTRODUCED_114):: defines_var(X_INTRODUCED_114);
constraint int_le_reif(1,X_INTRODUCED_22,X_INTRODUCED_117):: defines_var(X_INTRODUCED_117);
constraint bool2int(X_INTRODUCED_117,X_INTRODUCED_118):: defines_var(X_INTRODUCED_118);
constraint int_le_reif(1,X_INTRODUCED_23,X_INTRODUCED_120):: defines_var(X_INTRODUCED_120);
constraint bool2int(X_INTRODUCED_120,X_INTRODUCED_121):: defines_var(X_INTRODUCED_121);
constraint int_le_reif(1,X_INTRODUCED_24,X_INTRODUCED_123):: defines_var(X_INTRODUCED_123);
constraint bool2int(X_INTRODUCED_123,X_INTRODUCED_124):: defines_var(X_INTRODUCED_124);
constraint int_le_reif(1,X_INTRODUCED_25,X_INTRODUCED_127):: defines_var(X_INTRODUCED_127);
constraint bool2int(X_INTRODUCED_127,X_INTRODUCED_128):: defines_var(X_INTRODUCED_128);
constraint int_le_reif(1,X_INTRODUCED_26,X_INTRODUCED_130):: defines_var(X_INTRODUCED_130);
constraint bool2int(X_INTRODUCED_130,X_INTRODUCED_131):: defines_var(X_INTRODUCED_131);
constraint int_le_reif(1,X_INTRODUCED_27,X_INTRODUCED_133):: defines_var(X_INTRODUCED_133);
constraint bool2int(X_INTRODUCED_133,X_INTRODUCED_134):: defines_var(X_INTRODUCED_134);
constraint int_le_reif(1,X_INTRODUCED_28,X_INTRODUCED_136):: defines_var(X_INTRODUCED_136);
constraint bool2int(X_INTRODUCED_136,X_INTRODUCED_137):: defines_var(X_INTRODUCED_137);
constraint int_le_reif(1,X_INTRODUCED_29,X_INTRODUCED_139):: defines_var(X_INTRODUCED_139);
constraint bool2int(X_INTRODUCED_139,X_INTRODUCED_140):: defines_var(X_INTRODUCED_140);
constraint int_le_reif(1,X_INTRODUCED_30,X_INTRODUCED_143):: defines_var(X_INTRODUCED_143);
constraint bool2int(X_INTRODUCED_143,X_INTRODUCED_144):: defines_var(X_INTRODUCED_144);
constraint int_le_reif(1,X_INTRODUCED_31,X_INTRODUCED_147):: defines_var(X_INTRODUCED_147);
constraint bool2int(X_INTRODUCED_147,X_INTRODUCED_148):: defines_var(X_INTRODUCED_148);
constraint int_le_reif(1,X_INTRODUCED_32,X_INTRODUCED_150):: defines_var(X_INTRODUCED_150);
constraint bool2int(X_INTRODUCED_150,X_INTRODUCED_151):: defines_var(X_INTRODUCED_151);
constraint int_le_reif(1,X_INTRODUCED_33,X_INTRODUCED_153):: defines_var(X_INTRODUCED_153);
constraint bool2int(X_INTRODUCED_153,X_INTRODUCED_154):: defines_var(X_INTRODUCED_154);
constraint int_le_reif(X_INTRODUCED_0,0,X_INTRODUCED_160):: defines_var(X_INTRODUCED_160);
constraint int_le_reif(X_INTRODUCED_1,0,X_INTRODUCED_161):: defines_var(X_INTRODUCED_161);
constraint int_le_reif(X_INTRODUCED_2,0,X_INTRODUCED_162):: defines_var(X_INTRODUCED_162);
constraint int_le_reif(X_INTRODUCED_3,0,X_INTRODUCED_163):: defines_var(X_INTRODUCED_163);
constraint int_le_reif(X_INTRODUCED_4,0,X_INTRODUCED_164):: defines_var(X_INTRODUCED_164);
constraint int_le_reif(X_INTRODUCED_5,0,X_INTRODUCED_165):: defines_var(X_INTRODUCED_165);
constraint int_le_reif(X_INTRODUCED_6,0,X_INTRODUCED_166):: defines_var(X_INTRODUCED_166);
constraint int_le_reif(X_INTRODUCED_7,0,X_INTRODUCED_167):: defines_var(X_INTRODUCED_167);
constraint int_le_reif(X_INTRODUCED_8,0,X_INTRODUCED_168):: defines_var(X_INTRODUCED_168);
constraint int_le_reif(X_INTRODUCED_9,0,X_INTRODUCED_169):: defines_var(X_INTRODUCED_169);
constraint bool2int(X_INTRODUCED_160,X_INTRODUCED_171):: defines_var(X_INTRODUCED_171);
constraint bool2int(X_INTRODUCED_161,X_INTRODUCED_172):: defines_var(X_INTRODUCED_172);
constraint bool2int(X_INTRODUCED_162,X_INTRODUCED_173):: defines_var(X_INTRODUCED_173);
constraint bool2int(X_INTRODUCED_163,X_INTRODUCED_174):: defines_var(X_INTRODUCED_174);
constraint bool2int(X_INTRODUCED_164,X_INTRODUCED_175):: defines_var(X_INTRODUCED_175);
constraint bool2int(X_INTRODUCED_165,X_INTRODUCED_176):: defines_var(X_INTRODUCED_176);
constraint bool2int(X_INTRODUCED_166,X_INTRODUCED_177):: defines_var(X_INTRODUCED_177);
constraint bool2int(X_INTRODUCED_167,X_INTRODUCED_178):: defines_var(X_INTRODUCED_178);
constraint bool2int(X_INTRODUCED_168,X_INTRODUCED_179):: defines_var(X_INTRODUCED_179);
constraint bool2int(X_INTRODUCED_169,X_INTRODUCED_180):: defines_var(X_INTRODUCED_180);
solve :: int_search(X_INTRODUCED_181,input_order,indomain_min,complete) maximize objective;
